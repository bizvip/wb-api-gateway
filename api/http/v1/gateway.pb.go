// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: api/http/v1/gateway.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用返回消息
type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 返回码
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 返回信息
	Data *anypb.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 返回数据
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *Reply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Reply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Reply) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

// 用户账户信息
type UserAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                     // 用户ID
	Usr             string `protobuf:"bytes,2,opt,name=usr,proto3" json:"usr,omitempty"`                                                    // 用户名
	Pwd             string `protobuf:"bytes,3,opt,name=pwd,proto3" json:"pwd,omitempty"`                                                    // 密码
	SecPwd          string `protobuf:"bytes,4,opt,name=sec_pwd,json=secPwd,proto3" json:"sec_pwd,omitempty"`                                // 二级密码
	Mobile          string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`                                              // 手机号
	Email           string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`                                                // 邮箱
	Lang            string `protobuf:"bytes,7,opt,name=lang,proto3" json:"lang,omitempty"`                                                  // 语言
	Timezone        string `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`                                          // 时区
	RealName        string `protobuf:"bytes,9,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`                          // 真实姓名
	IdNo            string `protobuf:"bytes,10,opt,name=id_no,json=idNo,proto3" json:"id_no,omitempty"`                                     // 身份证号
	Currency        string `protobuf:"bytes,11,opt,name=currency,proto3" json:"currency,omitempty"`                                         // 货币类型
	IsGoogleAuth    bool   `protobuf:"varint,12,opt,name=is_google_auth,json=isGoogleAuth,proto3" json:"is_google_auth,omitempty"`          // 是否启用谷歌验证
	GoogleAuth      string `protobuf:"bytes,13,opt,name=google_auth,json=googleAuth,proto3" json:"google_auth,omitempty"`                   // 谷歌验证密钥
	DeviceId        string `protobuf:"bytes,14,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                         // 设备ID
	IsAllowedMsg    bool   `protobuf:"varint,15,opt,name=is_allowed_msg,json=isAllowedMsg,proto3" json:"is_allowed_msg,omitempty"`          // 是否允许短信
	IsAllowedEmail  bool   `protobuf:"varint,16,opt,name=is_allowed_email,json=isAllowedEmail,proto3" json:"is_allowed_email,omitempty"`    // 是否允许邮件
	MsgType         int32  `protobuf:"varint,17,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`                           // 短信类型
	IsRealAuth      bool   `protobuf:"varint,18,opt,name=is_real_auth,json=isRealAuth,proto3" json:"is_real_auth,omitempty"`                // 是否实名认证
	IsAddedBankcard bool   `protobuf:"varint,19,opt,name=is_added_bankcard,json=isAddedBankcard,proto3" json:"is_added_bankcard,omitempty"` // 是否绑定银行卡
	SecurityLevel   int32  `protobuf:"varint,20,opt,name=security_level,json=securityLevel,proto3" json:"security_level,omitempty"`         // 安全等级
	IsUnreadNotice  bool   `protobuf:"varint,21,opt,name=is_unread_notice,json=isUnreadNotice,proto3" json:"is_unread_notice,omitempty"`    // 是否有未读通知
	IsCoupon        bool   `protobuf:"varint,22,opt,name=is_coupon,json=isCoupon,proto3" json:"is_coupon,omitempty"`                        // 是否有优惠券
	Status          int32  `protobuf:"varint,23,opt,name=status,proto3" json:"status,omitempty"`                                            // 账户状态
	CreatedAt       string `protobuf:"bytes,24,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                      // 创建时间
	UpdatedAt       string `protobuf:"bytes,25,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                      // 更新时间
	DeletedAt       string `protobuf:"bytes,26,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                      // 删除时间
}

func (x *UserAccount) Reset() {
	*x = UserAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccount) ProtoMessage() {}

func (x *UserAccount) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccount.ProtoReflect.Descriptor instead.
func (*UserAccount) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *UserAccount) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserAccount) GetUsr() string {
	if x != nil {
		return x.Usr
	}
	return ""
}

func (x *UserAccount) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *UserAccount) GetSecPwd() string {
	if x != nil {
		return x.SecPwd
	}
	return ""
}

func (x *UserAccount) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserAccount) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserAccount) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UserAccount) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *UserAccount) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserAccount) GetIdNo() string {
	if x != nil {
		return x.IdNo
	}
	return ""
}

func (x *UserAccount) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UserAccount) GetIsGoogleAuth() bool {
	if x != nil {
		return x.IsGoogleAuth
	}
	return false
}

func (x *UserAccount) GetGoogleAuth() string {
	if x != nil {
		return x.GoogleAuth
	}
	return ""
}

func (x *UserAccount) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UserAccount) GetIsAllowedMsg() bool {
	if x != nil {
		return x.IsAllowedMsg
	}
	return false
}

func (x *UserAccount) GetIsAllowedEmail() bool {
	if x != nil {
		return x.IsAllowedEmail
	}
	return false
}

func (x *UserAccount) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *UserAccount) GetIsRealAuth() bool {
	if x != nil {
		return x.IsRealAuth
	}
	return false
}

func (x *UserAccount) GetIsAddedBankcard() bool {
	if x != nil {
		return x.IsAddedBankcard
	}
	return false
}

func (x *UserAccount) GetSecurityLevel() int32 {
	if x != nil {
		return x.SecurityLevel
	}
	return 0
}

func (x *UserAccount) GetIsUnreadNotice() bool {
	if x != nil {
		return x.IsUnreadNotice
	}
	return false
}

func (x *UserAccount) GetIsCoupon() bool {
	if x != nil {
		return x.IsCoupon
	}
	return false
}

func (x *UserAccount) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserAccount) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UserAccount) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UserAccount) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

// *地址簿*
type GetAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAddressRequest) Reset() {
	*x = GetAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressRequest) ProtoMessage() {}

func (x *GetAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressRequest.ProtoReflect.Descriptor instead.
func (*GetAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *GetAddressRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AddAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinName string `protobuf:"bytes,1,opt,name=coinName,proto3" json:"coinName,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Remark   string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AddAddressRequest) Reset() {
	*x = AddAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAddressRequest) ProtoMessage() {}

func (x *AddAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAddressRequest.ProtoReflect.Descriptor instead.
func (*AddAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *AddAddressRequest) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *AddAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddAddressRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DeleteAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAddressRequest) Reset() {
	*x = DeleteAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAddressRequest) ProtoMessage() {}

func (x *DeleteAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAddressRequest.ProtoReflect.Descriptor instead.
func (*DeleteAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAddressRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CoinName string `protobuf:"bytes,2,opt,name=coinName,proto3" json:"coinName,omitempty"`
	Address  string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Remark   string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateAddressRequest) Reset() {
	*x = UpdateAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddressRequest) ProtoMessage() {}

func (x *UpdateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateAddressRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAddressRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAddressRequest) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *UpdateAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateAddressRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type GetReceivingMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetReceivingMethodRequest) Reset() {
	*x = GetReceivingMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReceivingMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceivingMethodRequest) ProtoMessage() {}

func (x *GetReceivingMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceivingMethodRequest.ProtoReflect.Descriptor instead.
func (*GetReceivingMethodRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *GetReceivingMethodRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteReceivingMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Id  uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteReceivingMethodRequest) Reset() {
	*x = DeleteReceivingMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReceivingMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReceivingMethodRequest) ProtoMessage() {}

func (x *DeleteReceivingMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReceivingMethodRequest.ProtoReflect.Descriptor instead.
func (*DeleteReceivingMethodRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteReceivingMethodRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DeleteReceivingMethodRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AddReceivingMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Method     string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	RealName   string `protobuf:"bytes,3,opt,name=realName,proto3" json:"realName,omitempty"`
	CardNo     string `protobuf:"bytes,4,opt,name=cardNo,proto3" json:"cardNo,omitempty"`
	OpenBank   string `protobuf:"bytes,5,opt,name=openBank,proto3" json:"openBank,omitempty"`
	BankBranch string `protobuf:"bytes,6,opt,name=bankBranch,proto3" json:"bankBranch,omitempty"`
	Nickname   string `protobuf:"bytes,7,opt,name=nickname,proto3" json:"nickname,omitempty"`
	QrcodeUrl  string `protobuf:"bytes,8,opt,name=qrcodeUrl,proto3" json:"qrcodeUrl,omitempty"`
	ECnyNo     string `protobuf:"bytes,9,opt,name=eCnyNo,proto3" json:"eCnyNo,omitempty"`
}

func (x *AddReceivingMethodRequest) Reset() {
	*x = AddReceivingMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReceivingMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReceivingMethodRequest) ProtoMessage() {}

func (x *AddReceivingMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReceivingMethodRequest.ProtoReflect.Descriptor instead.
func (*AddReceivingMethodRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *AddReceivingMethodRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AddReceivingMethodRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *AddReceivingMethodRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *AddReceivingMethodRequest) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

func (x *AddReceivingMethodRequest) GetOpenBank() string {
	if x != nil {
		return x.OpenBank
	}
	return ""
}

func (x *AddReceivingMethodRequest) GetBankBranch() string {
	if x != nil {
		return x.BankBranch
	}
	return ""
}

func (x *AddReceivingMethodRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AddReceivingMethodRequest) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *AddReceivingMethodRequest) GetECnyNo() string {
	if x != nil {
		return x.ECnyNo
	}
	return ""
}

type UpdateReceivingMethodRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid        uint64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Method     string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	RealName   string `protobuf:"bytes,4,opt,name=realName,proto3" json:"realName,omitempty"`
	CardNo     string `protobuf:"bytes,5,opt,name=cardNo,proto3" json:"cardNo,omitempty"`
	OpenBank   string `protobuf:"bytes,6,opt,name=openBank,proto3" json:"openBank,omitempty"`
	BankBranch string `protobuf:"bytes,7,opt,name=bankBranch,proto3" json:"bankBranch,omitempty"`
	Nickname   string `protobuf:"bytes,8,opt,name=nickname,proto3" json:"nickname,omitempty"`
	QrcodeUrl  string `protobuf:"bytes,9,opt,name=qrcodeUrl,proto3" json:"qrcodeUrl,omitempty"`
	ECnyNo     string `protobuf:"bytes,10,opt,name=eCnyNo,proto3" json:"eCnyNo,omitempty"`
}

func (x *UpdateReceivingMethodRequest) Reset() {
	*x = UpdateReceivingMethodRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReceivingMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReceivingMethodRequest) ProtoMessage() {}

func (x *UpdateReceivingMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReceivingMethodRequest.ProtoReflect.Descriptor instead.
func (*UpdateReceivingMethodRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateReceivingMethodRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateReceivingMethodRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateReceivingMethodRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *UpdateReceivingMethodRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UpdateReceivingMethodRequest) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

func (x *UpdateReceivingMethodRequest) GetOpenBank() string {
	if x != nil {
		return x.OpenBank
	}
	return ""
}

func (x *UpdateReceivingMethodRequest) GetBankBranch() string {
	if x != nil {
		return x.BankBranch
	}
	return ""
}

func (x *UpdateReceivingMethodRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateReceivingMethodRequest) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *UpdateReceivingMethodRequest) GetECnyNo() string {
	if x != nil {
		return x.ECnyNo
	}
	return ""
}

type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *GetAccountRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type RegisterAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户名，长度必须在 6 到 32 个字符之间，不允许包含空格
	Usr string `protobuf:"bytes,1,opt,name=usr,proto3" json:"usr,omitempty"`
	// 密码，长度必须在 60 到 100 个字符之间，不允许包含空格
	Pwd string `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// 语言代码，必须为小写字母的 ISO 639-1 语言代码
	Lang string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	// 设备 ID，必须仅包含大小写字母、数字和下划线
	DeviceId string `protobuf:"bytes,4,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	// 时区，必须为合法的时区格式，例如 "Asia/Shanghai"
	TimeZone string `protobuf:"bytes,5,opt,name=timeZone,proto3" json:"timeZone,omitempty"`
	// 货币代码，必须为指定的合法货币代码，且必须为大写
	Currency string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *RegisterAccountRequest) Reset() {
	*x = RegisterAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAccountRequest) ProtoMessage() {}

func (x *RegisterAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAccountRequest.ProtoReflect.Descriptor instead.
func (*RegisterAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterAccountRequest) GetUsr() string {
	if x != nil {
		return x.Usr
	}
	return ""
}

func (x *RegisterAccountRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *RegisterAccountRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *RegisterAccountRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RegisterAccountRequest) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

func (x *RegisterAccountRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type UpdateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户 ID，必须为大于 0 的正整数
	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 语言代码，必须为小写字母的 ISO 639-1 语言代码
	Lang string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	// 货币代码，必须为指定的合法货币代码，服务端将强制统一转换为大写
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	// 安全密码，长度必须在 60 到 100 个字符之间，不允许包含空格
	SecPwd string `protobuf:"bytes,4,opt,name=secPwd,proto3" json:"secPwd,omitempty"`
}

func (x *UpdateAccountRequest) Reset() {
	*x = UpdateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_http_v1_gateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRequest) ProtoMessage() {}

func (x *UpdateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_http_v1_gateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return file_api_http_v1_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAccountRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateAccountRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UpdateAccountRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateAccountRequest) GetSecPwd() string {
	if x != nil {
		return x.SecPwd
	}
	return ""
}

var File_api_http_v1_gateway_proto protoreflect.FileDescriptor

var file_api_http_v1_gateway_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x86,
	0x06, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x73, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x73, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x77, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x50, 0x77, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x64, 0x5f, 0x6e, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x69,
	0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x4d, 0x73,
	0x67, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x52, 0x65, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x61,
	0x64, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x6b,
	0x63, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x63,
	0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xfa,
	0x42, 0x15, 0x72, 0x13, 0x10, 0x02, 0x32, 0x0c, 0x5e, 0x5b, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39,
	0x2d, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15, 0x10, 0x14, 0x32, 0x0e, 0x5e, 0x5b, 0x61,
	0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x00,
	0xd0, 0x01, 0x01, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2f, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbf, 0x01, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34,
	0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xfa, 0x42, 0x15, 0x72, 0x13, 0x10, 0x02, 0x32, 0x0c, 0x5e, 0x5b, 0x41, 0x2d, 0x5a,
	0x30, 0x2d, 0x39, 0x2d, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15, 0x10, 0x14, 0x32, 0x0e,
	0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0xd0, 0x01,
	0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x00, 0xd0, 0x01, 0x01, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x34,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x32, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf1, 0x03, 0x0a, 0x19, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x3e, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x26, 0xfa, 0x42, 0x23, 0x72, 0x21, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x63, 0x61,
	0x72, 0x64, 0x52, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x06, 0x61, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x52, 0x05, 0x65, 0x5f, 0x63, 0x6e, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x72, 0x12, 0x10, 0x01, 0x32, 0x0b, 0x5e, 0x5b,
	0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11, 0x72, 0x0f, 0x10, 0x01, 0x32,
	0x08, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x4e, 0x6f, 0x12, 0x36, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15, 0x10, 0x01, 0x32,
	0x0e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0xd0,
	0x01, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x3a, 0x0a, 0x0a,
	0x62, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15, 0x10, 0x01, 0x32, 0x0e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a,
	0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x0a, 0x62, 0x61,
	0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72,
	0x15, 0x10, 0x01, 0x32, 0x0e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39,
	0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3c, 0x0a, 0x09, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1e, 0xfa, 0x42, 0x1b, 0x72, 0x19, 0x32, 0x17, 0x5e, 0x28, 0x68, 0x74,
	0x74, 0x70, 0x7c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x29, 0x3a, 0x2f, 0x2f, 0x5b, 0x5e, 0x5c, 0x73,
	0x5d, 0x2b, 0x24, 0x52, 0x09, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2c,
	0x0a, 0x06, 0x65, 0x43, 0x6e, 0x79, 0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xfa, 0x42, 0x11, 0x72, 0x0f, 0x10, 0x01, 0x32, 0x08, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b,
	0x24, 0xd0, 0x01, 0x00, 0x52, 0x06, 0x65, 0x43, 0x6e, 0x79, 0x4e, 0x6f, 0x22, 0x8d, 0x04, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x3e, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x26, 0xfa, 0x42, 0x23, 0x72, 0x21, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x63, 0x61,
	0x72, 0x64, 0x52, 0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x06, 0x61, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x52, 0x05, 0x65, 0x5f, 0x63, 0x6e, 0x79, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x14, 0x72, 0x12, 0x10, 0x01, 0x32, 0x0b, 0x5e, 0x5b,
	0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11, 0x72, 0x0f, 0x10, 0x01, 0x32,
	0x08, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x4e, 0x6f, 0x12, 0x36, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15, 0x10, 0x01, 0x32,
	0x0e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0xd0,
	0x01, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x3a, 0x0a, 0x0a,
	0x62, 0x61, 0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72, 0x15, 0x10, 0x01, 0x32, 0x0e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a,
	0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x0a, 0x62, 0x61,
	0x6e, 0x6b, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x42, 0x17, 0x72,
	0x15, 0x10, 0x01, 0x32, 0x0e, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39,
	0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3c, 0x0a, 0x09, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x1e, 0xfa, 0x42, 0x1b, 0x72, 0x19, 0x32, 0x17, 0x5e, 0x28, 0x68, 0x74,
	0x74, 0x70, 0x7c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x29, 0x3a, 0x2f, 0x2f, 0x5b, 0x5e, 0x5c, 0x73,
	0x5d, 0x2b, 0x24, 0x52, 0x09, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2c,
	0x0a, 0x06, 0x65, 0x43, 0x6e, 0x79, 0x4e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xfa, 0x42, 0x11, 0x72, 0x0f, 0x10, 0x01, 0x32, 0x08, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b,
	0x24, 0xd0, 0x01, 0x00, 0x52, 0x06, 0x65, 0x43, 0x6e, 0x79, 0x4e, 0x6f, 0x22, 0x2e, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x8d, 0x03, 0x0a,
	0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x03, 0x75, 0x73, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xfa, 0x42, 0x13, 0x72, 0x11, 0x10, 0x06, 0x18, 0x20, 0x32,
	0x08, 0x5e, 0x5b, 0x5e, 0x5c, 0x73, 0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x03, 0x75, 0x73,
	0x72, 0x12, 0x28, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16,
	0xfa, 0x42, 0x13, 0x72, 0x11, 0x10, 0x3c, 0x18, 0x64, 0x32, 0x08, 0x5e, 0x5b, 0x5e, 0x5c, 0x73,
	0x5d, 0x2b, 0x24, 0xd0, 0x01, 0x00, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x11, 0x72, 0x0f,
	0x32, 0x0a, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x7b, 0x32, 0x7d, 0x24, 0xd0, 0x01, 0x00, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xfa, 0x42, 0x16, 0x72, 0x14, 0x32, 0x0f,
	0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x41, 0x2d, 0x5a, 0x30, 0x2d, 0x39, 0x5f, 0x5d, 0x2b, 0x24, 0xd0,
	0x01, 0x00, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21,
	0xfa, 0x42, 0x1e, 0x72, 0x1c, 0x32, 0x17, 0x5e, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x5f,
	0x5d, 0x2b, 0x2f, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x5f, 0x5d, 0x2b, 0x24, 0xd0, 0x01,
	0x00, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x7f, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x63, 0xfa,
	0x42, 0x60, 0x72, 0x5e, 0x52, 0x03, 0x43, 0x4e, 0x59, 0x52, 0x03, 0x55, 0x53, 0x44, 0x52, 0x03,
	0x45, 0x55, 0x52, 0x52, 0x03, 0x4a, 0x50, 0x59, 0x52, 0x03, 0x47, 0x42, 0x50, 0x52, 0x03, 0x41,
	0x55, 0x44, 0x52, 0x03, 0x43, 0x41, 0x44, 0x52, 0x03, 0x43, 0x48, 0x46, 0x52, 0x03, 0x48, 0x4b,
	0x44, 0x52, 0x03, 0x4e, 0x5a, 0x44, 0x52, 0x03, 0x4b, 0x52, 0x57, 0x52, 0x03, 0x49, 0x44, 0x52,
	0x52, 0x03, 0x56, 0x4e, 0x44, 0x52, 0x03, 0x54, 0x57, 0x44, 0x52, 0x03, 0x53, 0x47, 0x44, 0x52,
	0x03, 0x42, 0x52, 0x4c, 0x52, 0x03, 0x4d, 0x4f, 0x50, 0x52, 0x04, 0x55, 0x53, 0x44, 0x54, 0xd0,
	0x01, 0x00, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x8c, 0x02, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x28, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xfa, 0x42, 0x11, 0x72, 0x0f, 0x32, 0x0a, 0x5e, 0x5b, 0x61, 0x2d, 0x7a, 0x5d, 0x7b, 0x32, 0x7d,
	0x24, 0xd0, 0x01, 0x00, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x7f, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x63, 0xfa, 0x42,
	0x60, 0x72, 0x5e, 0x52, 0x03, 0x43, 0x4e, 0x59, 0x52, 0x03, 0x55, 0x53, 0x44, 0x52, 0x03, 0x45,
	0x55, 0x52, 0x52, 0x03, 0x4a, 0x50, 0x59, 0x52, 0x03, 0x47, 0x42, 0x50, 0x52, 0x03, 0x41, 0x55,
	0x44, 0x52, 0x03, 0x43, 0x41, 0x44, 0x52, 0x03, 0x43, 0x48, 0x46, 0x52, 0x03, 0x48, 0x4b, 0x44,
	0x52, 0x03, 0x4e, 0x5a, 0x44, 0x52, 0x03, 0x4b, 0x52, 0x57, 0x52, 0x03, 0x49, 0x44, 0x52, 0x52,
	0x03, 0x56, 0x4e, 0x44, 0x52, 0x03, 0x54, 0x57, 0x44, 0x52, 0x03, 0x53, 0x47, 0x44, 0x52, 0x03,
	0x42, 0x52, 0x4c, 0x52, 0x03, 0x4d, 0x4f, 0x50, 0x52, 0x04, 0x55, 0x53, 0x44, 0x54, 0xd0, 0x01,
	0x00, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x50, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xfa, 0x42, 0x13,
	0x72, 0x11, 0x10, 0x3c, 0x18, 0x64, 0x32, 0x08, 0x5e, 0x5b, 0x5e, 0x5c, 0x73, 0x5d, 0x2b, 0x24,
	0xd0, 0x01, 0x00, 0x52, 0x06, 0x73, 0x65, 0x63, 0x50, 0x77, 0x64, 0x32, 0xda, 0x03, 0x0a, 0x07,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x99, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x4d, 0xba, 0x47, 0x2e, 0x12, 0x0c, 0xe6, 0xb3, 0xa8, 0xe5, 0x86,
	0x8c, 0xe8, 0xb4, 0xa6, 0xe6, 0x88, 0xb7, 0x1a, 0x1e, 0xe4, 0xb8, 0xba, 0xe6, 0x96, 0xb0, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe6, 0xb3, 0xa8, 0xe5, 0x86, 0x8c, 0xe4, 0xb8, 0x80, 0xe4, 0xb8,
	0xaa, 0xe8, 0xb4, 0xa6, 0xe6, 0x88, 0xb7, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a,
	0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x97, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x55, 0xba, 0x47, 0x33, 0x12, 0x0c, 0xe8, 0xaf, 0xbb,
	0xe5, 0x8f, 0x96, 0xe8, 0xb4, 0xa6, 0xe6, 0x88, 0xb7, 0x1a, 0x23, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f,
	0x96, 0xe6, 0x8c, 0x87, 0xe5, 0xae, 0x9a, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0xe7,
	0x9a, 0x84, 0xe8, 0xb4, 0xa6, 0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x98, 0x01,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x50, 0xba, 0x47, 0x2b, 0x12, 0x0c, 0xe6, 0x9b, 0xb4,
	0xe6, 0x96, 0xb0, 0xe8, 0xb4, 0xa6, 0xe6, 0x88, 0xb7, 0x1a, 0x1b, 0xe6, 0x9b, 0xb4, 0xe6, 0x96,
	0xb0, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9a, 0x84, 0xe8, 0xb4, 0xa6, 0xe6, 0x88, 0xb7,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x1a,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x32, 0x98, 0x06, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x97, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x5a, 0xba, 0x47, 0x3d, 0x12, 0x15, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f,
	0x96, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe7, 0xb0, 0xbf, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8,
	0x1a, 0x24, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9a,
	0x84, 0xe6, 0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe7, 0xb0, 0xbf,
	0xe6, 0x9d, 0xa1, 0xe7, 0x9b, 0xae, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x9e, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x5c, 0xba, 0x47, 0x3a, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96,
	0xe5, 0x8d, 0x95, 0xe6, 0x9d, 0xa1, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x1a, 0x24, 0xe8, 0x8e,
	0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9a, 0x84, 0xe5, 0x8d, 0x95,
	0xe6, 0x9d, 0xa1, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe7, 0xb0, 0xbf, 0xe6, 0x9d, 0xa1, 0xe7,
	0x9b, 0xae, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x96, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x54, 0xba, 0x47, 0x34, 0x12, 0x0c, 0xe6, 0xb7, 0xbb, 0xe5, 0x8a,
	0xa0, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x1a, 0x24, 0xe4, 0xb8, 0xba, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0xe6, 0xb7, 0xbb, 0xe5, 0x8a, 0xa0, 0xe6, 0x96, 0xb0, 0xe7, 0x9a, 0x84, 0xe5, 0x9c,
	0xb0, 0xe5, 0x9d, 0x80, 0xe7, 0xb0, 0xbf, 0xe6, 0x9d, 0xa1, 0xe7, 0x9b, 0xae, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x53, 0xba, 0x47, 0x2e, 0x12, 0x0c, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0,
	0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x1a, 0x1e, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9a, 0x84, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe7, 0xb0, 0xbf,
	0xe6, 0x9d, 0xa1, 0xe7, 0x9b, 0xae, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x1a,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x98, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x50, 0xba, 0x47, 0x2e, 0x12, 0x0c, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe5, 0x9c,
	0xb0, 0xe5, 0x9d, 0x80, 0x1a, 0x1e, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe7, 0x94, 0xa8, 0xe6,
	0x88, 0xb7, 0xe7, 0x9a, 0x84, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xe7, 0xb0, 0xbf, 0xe6, 0x9d,
	0xa1, 0xe7, 0x9b, 0xae, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x32, 0xfc, 0x07, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0xbe, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x7a, 0xba,
	0x47, 0x55, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x12, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6, 0x94, 0xb6, 0xe6,
	0xac, 0xbe, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x1a, 0x27,
	0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9a, 0x84, 0xe6,
	0x89, 0x80, 0xe6, 0x9c, 0x89, 0xe6, 0x94, 0xb6, 0xe6, 0xac, 0xbe, 0xe6, 0x96, 0xb9, 0xe5, 0xbc,
	0x8f, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0xc7, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68,
	0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x75, 0xba, 0x47,
	0x4b, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x73, 0x12, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe5, 0x8d, 0x95, 0xe4, 0xb8,
	0xaa, 0xe6, 0x94, 0xb6, 0xe6, 0xac, 0xbe, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0x1a, 0x1d, 0xe8,
	0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6, 0x8c, 0x87, 0xe5, 0xae, 0x9a, 0x49, 0x44, 0xe7, 0x9a, 0x84,
	0xe6, 0x94, 0xb6, 0xe6, 0xac, 0xbe, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0xc3, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x71, 0xba, 0x47, 0x49, 0x0a, 0x10, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x12, 0xe6,
	0xb7, 0xbb, 0xe5, 0x8a, 0xa0, 0xe6, 0x94, 0xb6, 0xe6, 0xac, 0xbe, 0xe6, 0x96, 0xb9, 0xe5, 0xbc,
	0x8f, 0x1a, 0x21, 0xe4, 0xb8, 0xba, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe6, 0xb7, 0xbb, 0xe5,
	0x8a, 0xa0, 0xe6, 0x96, 0xb0, 0xe7, 0x9a, 0x84, 0xe6, 0x94, 0xb6, 0xe6, 0xac, 0xbe, 0xe6, 0x96,
	0xb9, 0xe5, 0xbc, 0x8f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0xce, 0x01, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x76, 0xba, 0x47, 0x49, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x12, 0xe6, 0x9b, 0xb4, 0xe6, 0x96,
	0xb0, 0xe6, 0x94, 0xb6, 0xe6, 0xac, 0xbe, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0x1a, 0x21, 0xe6,
	0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9a, 0x84, 0xe6, 0x94,
	0xb6, 0xe6, 0xac, 0xbe, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x1a, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x2d, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xc5, 0x01, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x6d, 0xba, 0x47, 0x43, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x12, 0xe5, 0x88, 0xa0, 0xe9,
	0x99, 0xa4, 0xe6, 0x94, 0xb6, 0xe6, 0xac, 0xbe, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0x1a, 0x1b,
	0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe7, 0x9a, 0x84, 0xe6,
	0x94, 0xb6, 0xe6, 0xac, 0xbe, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x2a, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x69, 0x6e, 0x67, 0x2d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x42, 0x84, 0x02, 0xba, 0x47, 0xc1, 0x01, 0x0a, 0x05, 0x33, 0x2e, 0x30, 0x2e, 0x30,
	0x12, 0x58, 0x0a, 0x0b, 0x57, 0x54, 0x20, 0x41, 0x50, 0x49, 0x20, 0x44, 0x6f, 0x63, 0x73, 0x12,
	0x0f, 0x57, 0x54, 0x20, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0xe6, 0x96, 0x87, 0xe6, 0xa1, 0xa3,
	0x22, 0x31, 0x0a, 0x08, 0x41, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2b, 0x2b, 0x12, 0x25, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x6f, 0x72, 0x63, 0x69, 0x64, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x30, 0x30, 0x30, 0x39, 0x2d, 0x30, 0x30, 0x30, 0x33, 0x2d, 0x38, 0x31, 0x35, 0x30, 0x2d, 0x33,
	0x36, 0x37, 0x58, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x1a, 0x2e, 0x0a, 0x15, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x38,
	0x30, 0x38, 0x38, 0x12, 0x15, 0xe6, 0x9c, 0xac, 0xe5, 0x9c, 0xb0, 0xe8, 0xb0, 0x83, 0xe8, 0xaf,
	0x95, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0x1a, 0x2e, 0x0a, 0x15, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x38,
	0x30, 0x38, 0x38, 0x12, 0x15, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0xe6, 0x96, 0x87, 0xe6, 0xa1,
	0xa3, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x22, 0x61, 0x70, 0x69, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xa2, 0x02, 0x09,
	0x41, 0x70, 0x69, 0x48, 0x74, 0x74, 0x70, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_http_v1_gateway_proto_rawDescOnce sync.Once
	file_api_http_v1_gateway_proto_rawDescData = file_api_http_v1_gateway_proto_rawDesc
)

func file_api_http_v1_gateway_proto_rawDescGZIP() []byte {
	file_api_http_v1_gateway_proto_rawDescOnce.Do(func() {
		file_api_http_v1_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_http_v1_gateway_proto_rawDescData)
	})
	return file_api_http_v1_gateway_proto_rawDescData
}

var file_api_http_v1_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_http_v1_gateway_proto_goTypes = []any{
	(*Reply)(nil),                        // 0: api.http.v1.Reply
	(*UserAccount)(nil),                  // 1: api.http.v1.UserAccount
	(*GetAddressRequest)(nil),            // 2: api.http.v1.GetAddressRequest
	(*AddAddressRequest)(nil),            // 3: api.http.v1.AddAddressRequest
	(*DeleteAddressRequest)(nil),         // 4: api.http.v1.DeleteAddressRequest
	(*UpdateAddressRequest)(nil),         // 5: api.http.v1.UpdateAddressRequest
	(*GetReceivingMethodRequest)(nil),    // 6: api.http.v1.GetReceivingMethodRequest
	(*DeleteReceivingMethodRequest)(nil), // 7: api.http.v1.DeleteReceivingMethodRequest
	(*AddReceivingMethodRequest)(nil),    // 8: api.http.v1.AddReceivingMethodRequest
	(*UpdateReceivingMethodRequest)(nil), // 9: api.http.v1.UpdateReceivingMethodRequest
	(*GetAccountRequest)(nil),            // 10: api.http.v1.GetAccountRequest
	(*RegisterAccountRequest)(nil),       // 11: api.http.v1.RegisterAccountRequest
	(*UpdateAccountRequest)(nil),         // 12: api.http.v1.UpdateAccountRequest
	(*anypb.Any)(nil),                    // 13: google.protobuf.Any
	(*emptypb.Empty)(nil),                // 14: google.protobuf.Empty
}
var file_api_http_v1_gateway_proto_depIdxs = []int32{
	13, // 0: api.http.v1.Reply.data:type_name -> google.protobuf.Any
	11, // 1: api.http.v1.Account.RegisterAccount:input_type -> api.http.v1.RegisterAccountRequest
	10, // 2: api.http.v1.Account.GetAccount:input_type -> api.http.v1.GetAccountRequest
	12, // 3: api.http.v1.Account.UpdateAccount:input_type -> api.http.v1.UpdateAccountRequest
	14, // 4: api.http.v1.Addresses.ListAddresses:input_type -> google.protobuf.Empty
	2,  // 5: api.http.v1.Addresses.GetAddress:input_type -> api.http.v1.GetAddressRequest
	3,  // 6: api.http.v1.Addresses.AddAddress:input_type -> api.http.v1.AddAddressRequest
	5,  // 7: api.http.v1.Addresses.UpdateAddress:input_type -> api.http.v1.UpdateAddressRequest
	4,  // 8: api.http.v1.Addresses.DeleteAddress:input_type -> api.http.v1.DeleteAddressRequest
	14, // 9: api.http.v1.ReceivingMethods.ListReceivingMethods:input_type -> google.protobuf.Empty
	6,  // 10: api.http.v1.ReceivingMethods.GetReceivingMethod:input_type -> api.http.v1.GetReceivingMethodRequest
	8,  // 11: api.http.v1.ReceivingMethods.AddReceivingMethod:input_type -> api.http.v1.AddReceivingMethodRequest
	9,  // 12: api.http.v1.ReceivingMethods.UpdateReceivingMethod:input_type -> api.http.v1.UpdateReceivingMethodRequest
	7,  // 13: api.http.v1.ReceivingMethods.DeleteReceivingMethod:input_type -> api.http.v1.DeleteReceivingMethodRequest
	0,  // 14: api.http.v1.Account.RegisterAccount:output_type -> api.http.v1.Reply
	0,  // 15: api.http.v1.Account.GetAccount:output_type -> api.http.v1.Reply
	0,  // 16: api.http.v1.Account.UpdateAccount:output_type -> api.http.v1.Reply
	0,  // 17: api.http.v1.Addresses.ListAddresses:output_type -> api.http.v1.Reply
	0,  // 18: api.http.v1.Addresses.GetAddress:output_type -> api.http.v1.Reply
	0,  // 19: api.http.v1.Addresses.AddAddress:output_type -> api.http.v1.Reply
	0,  // 20: api.http.v1.Addresses.UpdateAddress:output_type -> api.http.v1.Reply
	0,  // 21: api.http.v1.Addresses.DeleteAddress:output_type -> api.http.v1.Reply
	0,  // 22: api.http.v1.ReceivingMethods.ListReceivingMethods:output_type -> api.http.v1.Reply
	0,  // 23: api.http.v1.ReceivingMethods.GetReceivingMethod:output_type -> api.http.v1.Reply
	0,  // 24: api.http.v1.ReceivingMethods.AddReceivingMethod:output_type -> api.http.v1.Reply
	0,  // 25: api.http.v1.ReceivingMethods.UpdateReceivingMethod:output_type -> api.http.v1.Reply
	0,  // 26: api.http.v1.ReceivingMethods.DeleteReceivingMethod:output_type -> api.http.v1.Reply
	14, // [14:27] is the sub-list for method output_type
	1,  // [1:14] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_api_http_v1_gateway_proto_init() }
func file_api_http_v1_gateway_proto_init() {
	if File_api_http_v1_gateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_http_v1_gateway_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UserAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AddAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetReceivingMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteReceivingMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AddReceivingMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateReceivingMethodRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_http_v1_gateway_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_http_v1_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_http_v1_gateway_proto_goTypes,
		DependencyIndexes: file_api_http_v1_gateway_proto_depIdxs,
		MessageInfos:      file_api_http_v1_gateway_proto_msgTypes,
	}.Build()
	File_api_http_v1_gateway_proto = out.File
	file_api_http_v1_gateway_proto_rawDesc = nil
	file_api_http_v1_gateway_proto_goTypes = nil
	file_api_http_v1_gateway_proto_depIdxs = nil
}
